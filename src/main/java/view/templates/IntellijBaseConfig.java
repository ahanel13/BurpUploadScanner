package view.templates;

import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionListener;

//todo: move the config specific UI to the BaseConfig Class
public class IntellijBaseConfig {
    public IntellijBaseConfig() {
        tabName = TAB_NAME;
    }

    public JPanel mainPanel;

    public String getTabName() {
        return tabName;
    }

    public void addSaveButtonListener(ActionListener listener) {
        throttleValue.addActionListener(listener);
    }

    public JTextField getThrottleValue() {
        return throttleValue;
    }

    public JCheckBox getAddToLoggingChkBox() {
        return addToLoggingChkBox;
    }

    public JCheckBox getReplaceFileName() {
        return replaceFileName;
    }

    public JCheckBox getReplaceContentType() {
        return replaceContentType;
    }

    public JCheckBox getReplaceFileSize() {
        return replaceFileSize;
    }

    public JCheckBox getWgetCurlPayloads() {
        return wgetCurlPayloads;
    }

    public JTextField getSleepTime() {
        return sleepTime;
    }

    // Labels and Containers
    private final String tabName;
    private       JPanel configGroups;
    private       JPanel moduleOptions;
    private       JPanel fileFormatOptions;
    private       JPanel scanningOptions;
    private       JLabel throttleTimeLabel;
    private       JPanel payloadOptions;
    private       JPanel generalOptions;
    private       JLabel sleepTimeLabel;
    private       JPanel footerButtons;

    // UI Inputs
    private JTextField throttleValue;
    private JCheckBox  addToLoggingChkBox;
    private JCheckBox  replaceFileName;
    private JCheckBox  replaceContentType;
    private JCheckBox  replaceFileSize;
    private JCheckBox  wgetCurlPayloads;
    private JTextField sleepTime;
    private JButton    resetBtn;
    private JButton    saveBtn;

    // CONSTANTS
    private final String TAB_NAME = "Global Config";

    private void createUIComponents() {
        // TODO: place custom component creation code here
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        mainPanel = new JPanel();
        mainPanel.setLayout(new BorderLayout(0, 0));
        configGroups = new JPanel();
        configGroups.setLayout(new FlowLayout(FlowLayout.CENTER, 5, 5));
        configGroups.setMaximumSize(new Dimension(250, 32767));
        mainPanel.add(configGroups, BorderLayout.CENTER);
        moduleOptions = new JPanel();
        moduleOptions.setLayout(new BorderLayout(0, 0));
        configGroups.add(moduleOptions);
        fileFormatOptions = new JPanel();
        fileFormatOptions.setLayout(new BorderLayout(0, 0));
        configGroups.add(fileFormatOptions);
        scanningOptions = new JPanel();
        scanningOptions.setLayout(new FlowLayout(FlowLayout.CENTER, 5, 5));
        configGroups.add(scanningOptions);
        final JPanel panel1 = new JPanel();
        panel1.setLayout(new FlowLayout(FlowLayout.CENTER, 5, 5));
        panel1.setMinimumSize(new Dimension(250, 40));
        scanningOptions.add(panel1);
        throttleTimeLabel = new JLabel();
        throttleTimeLabel.setText("Throttle Time");
        panel1.add(throttleTimeLabel);
        throttleValue = new JTextField();
        throttleValue.setText("0.0");
        panel1.add(throttleValue);
        replaceFileSize = new JCheckBox();
        replaceFileSize.setHorizontalTextPosition(10);
        replaceFileSize.setSelected(true);
        replaceFileSize.setText("Replace File Size");
        scanningOptions.add(replaceFileSize);
        replaceFileName = new JCheckBox();
        replaceFileName.setHorizontalTextPosition(10);
        replaceFileName.setSelected(true);
        replaceFileName.setText("Replace File Name");
        scanningOptions.add(replaceFileName);
        replaceContentType = new JCheckBox();
        replaceContentType.setHorizontalTextPosition(10);
        replaceContentType.setSelected(true);
        replaceContentType.setText("Replace Content Type");
        scanningOptions.add(replaceContentType);
        payloadOptions = new JPanel();
        payloadOptions.setLayout(new BorderLayout(0, 0));
        configGroups.add(payloadOptions);
        wgetCurlPayloads = new JCheckBox();
        wgetCurlPayloads.setHorizontalTextPosition(10);
        wgetCurlPayloads.setText("Send wget  Curl Payloads");
        wgetCurlPayloads.setMnemonic(' ');
        wgetCurlPayloads.setDisplayedMnemonicIndex(10);
        payloadOptions.add(wgetCurlPayloads, BorderLayout.CENTER);
        final JPanel panel2 = new JPanel();
        panel2.setLayout(new FlowLayout(FlowLayout.CENTER, 5, 5));
        payloadOptions.add(panel2, BorderLayout.WEST);
        sleepTimeLabel = new JLabel();
        sleepTimeLabel.setText("Sleep Time used in RCE Payloads");
        panel2.add(sleepTimeLabel);
        sleepTime = new JTextField();
        sleepTime.setText("6.0");
        panel2.add(sleepTime);
        generalOptions = new JPanel();
        generalOptions.setLayout(new BorderLayout(0, 0));
        configGroups.add(generalOptions);
        addToLoggingChkBox = new JCheckBox();
        addToLoggingChkBox.setHorizontalTextPosition(10);
        addToLoggingChkBox.setSelected(true);
        addToLoggingChkBox.setText("Add to Logging Tab");
        generalOptions.add(addToLoggingChkBox, BorderLayout.CENTER);
        footerButtons = new JPanel();
        footerButtons.setLayout(new FlowLayout(FlowLayout.RIGHT, 5, 5));
        mainPanel.add(footerButtons, BorderLayout.SOUTH);
        resetBtn = new JButton();
        resetBtn.setText("Reset");
        footerButtons.add(resetBtn);
        saveBtn = new JButton();
        saveBtn.setText("Save");
        footerButtons.add(saveBtn);
        throttleTimeLabel.setLabelFor(throttleValue);
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return mainPanel;
    }

}
